#include <iostream>
#include <string.h>

using namespace std;

int main() {
    system("chcp 65001");  //Русский язык
	char txt[] = { "Жили были дед и баба" };  //Исходное предложение
	int l = 0;  //объявление переменной l - длина предложения
	for (int i = 0; txt[i] != '\0'; i++) l++;  //находим длину предложения
	char rez[100] = { '\0' };  //объявление массива rez - результат работы программы
	char word[25] = { '\0' };
	for (int i = -1, j = 0; j < l; j++) {  /*проходим по всей строчке    i - индекс массива слова
																		 j - индекс массива предложения */
		if (txt[j] != ' ') { //пока не встретим пробел записываем буквы в массив word
			i += 1;
			word[i] = txt[j];
		}
		if ((txt[j] == ' ') || (j == l - 1)) {  //если кончилось слово или кончилась строчка
			char* p2 = new char[l + 2];  //создаем динамический массив(перевернутое слово)
			int k = 0, o = 0;  //объявление переменных
			for (int i2 = 0; word[i2] != '\0'; i2++) k++;  //находим длину слова
			for (int i3 = 0; rez[i3] != '\0'; i3++) o++;  //находим длину итогового массива
			for (int x1 = 0, x2 = k - 1; x1 < k; x1++, x2--) p2[x2] = word[x1];  //переворачиваем слово
			p2[k] = '\0';  //устанавливаем конец слова
			int key = 0;
			for (int x = 0; word[x] != '\0'; x++) //определяем являются ли слово палиндромом (если значения key и k равны, то являются)
				if (word[x] == p2[x])
					key++;
			if ((key != k) || (k == 1)) {  //если слово не палиндром или его длина равна 1, то
				for (int g = 0; g < k; g++) rez[g + o] = p2[g];  //записываем перевернутое слово в массив
				if (j == l - 1) rez[k + o] = '\0';
				else rez[k + o] = ' ' + '\0';
			}
			delete[] p2;  //очистка динамической памяти
			for(int y = 0; y < k; y++)  //очищаем массив слова от прежних значений
				word[y] = NULL;
			i = -1;  //устанавливаем индекс массива слова в начальное положение
		}
	}
	for (int i = 0; rez[i] != '\0'; i++) cout << rez[i];  //Вывод результата в консоль
	return 0;
}